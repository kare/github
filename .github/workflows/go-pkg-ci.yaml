---
on:
  workflow_call:
    inputs:
      staticcheckversion:
        description: Staticcheck version.
        type: string
        required: true
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false
      - name: Go build
        run: |
          os=(darwin linux)
          arch=(amd64 arm64)
          for goos in "${os[@]}"
          do
            for goarch in "${arch[@]}"
            do
              go clean -i
              echo "Building GOOS=$goos GOARCH=$goarch"
              CGO_ENABLE=0 GOOS=$goos GOARCH=$goarch go build -trimpath
            done
          done
      - name: Run unit tests
        run: |
          coverage_file=$(mktemp -t unit-test-coverage-XXXXXXXXXX)
          go test -short -coverprofile $coverage_file ./...
          go tool cover -func $coverage_file
          go tool cover -html $coverage_file -o unit-test-coverage.html
      - name: Upload unit test coverage report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unit-test-coverage
          path: unit-test-coverage.html
      - name: Run integration tests
        run: |
          coverage_file=$(mktemp -t integration-test-coverage-XXXXXXXXXX)
          go test -coverprofile $coverage_file ./...
          go tool cover -func $coverage_file
          go tool cover -html $coverage_file -o integration-test-coverage.html
      - name: Upload integration test coverage report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: integration-test-coverage
          path: integration-test-coverage.html
      - name: Build with race detector
        run: go build -race
      - name: Run unit tests with race detector
        run: go test -race ./...
      - name: Run vet
        run: go vet ./...
      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.4.0
        with:
          version: ${{ inputs.staticcheckversion }}
          install-go: false
      - name: Check source is go fmted
        run: diff -u <(gofmt -d ./) <(echo -n)
      - name: Check source is go fmt simplified
        run: diff -u <(gofmt -s -d ./) <(echo -n)
      - name: Check running go mod tidy doesn't generate changes
        run: diff -u <(go mod tidy -v) <(echo -n)
      - name: Check running go generate doesn't generate changes
        run: diff -u <(go generate ./...) <(git diff)
